/**
 * Generated by Gas3 v2.3.2 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (Spitter.as).
 */

package org.example.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.meta;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;

    use namespace meta;

    [Managed]
    public class SpitterBase extends AbstractEntityCustom {

        private var _deneme:String;

        public function set deneme(value:String):void {
            _deneme = value;
        }
        public function get deneme():String {
            return _deneme;
        }

        meta override function merge(em:IEntityManager, obj:*):void {
            var src:SpitterBase = SpitterBase(obj);
            super.meta::merge(em, obj);
            if (meta::isInitialized()) {
               em.meta_mergeExternal(src._deneme, _deneme, null, this, 'deneme', function setter(o:*):void{_deneme = o as String}, false);
            }
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            if (meta::isInitialized()) {
                _deneme = input.readObject() as String;
            }
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            if (meta::isInitialized()) {
                output.writeObject((_deneme is IPropertyHolder) ? IPropertyHolder(_deneme).object : _deneme);
            }
        }
    }
}
